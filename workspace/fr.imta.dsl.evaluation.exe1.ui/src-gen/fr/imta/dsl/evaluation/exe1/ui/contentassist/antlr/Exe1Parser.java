/*
* generated by Xtext
*/
package fr.imta.dsl.evaluation.exe1.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.imta.dsl.evaluation.exe1.services.Exe1GrammarAccess;

public class Exe1Parser extends AbstractContentAssistParser {
	
	@Inject
	private Exe1GrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.imta.dsl.evaluation.exe1.ui.contentassist.antlr.internal.InternalExe1Parser createParser() {
		fr.imta.dsl.evaluation.exe1.ui.contentassist.antlr.internal.InternalExe1Parser result = new fr.imta.dsl.evaluation.exe1.ui.contentassist.antlr.internal.InternalExe1Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getComponentAccess().getAlternatives(), "rule__Component__Alternatives");
					put(grammarAccess.getFrameAccess().getGroup_0(), "rule__Frame__Group_0__0");
					put(grammarAccess.getFrameAccess().getGroup_3(), "rule__Frame__Group_3__0");
					put(grammarAccess.getTitleAccess().getGroup(), "rule__Title__Group__0");
					put(grammarAccess.getWidthAccess().getGroup(), "rule__Width__Group__0");
					put(grammarAccess.getHeightAccess().getGroup(), "rule__Height__Group__0");
					put(grammarAccess.getContentAccess().getGroup(), "rule__Content__Group__0");
					put(grammarAccess.getLabelAccess().getGroup(), "rule__Label__Group__0");
					put(grammarAccess.getButtonAccess().getGroup(), "rule__Button__Group__0");
					put(grammarAccess.getModelAccess().getFramesAssignment(), "rule__Model__FramesAssignment");
					put(grammarAccess.getFrameAccess().getNameAssignment_0_1(), "rule__Frame__NameAssignment_0_1");
					put(grammarAccess.getFrameAccess().getTitleAssignment_0_3(), "rule__Frame__TitleAssignment_0_3");
					put(grammarAccess.getFrameAccess().getWidthAssignment_1(), "rule__Frame__WidthAssignment_1");
					put(grammarAccess.getFrameAccess().getHeightAssignment_2(), "rule__Frame__HeightAssignment_2");
					put(grammarAccess.getFrameAccess().getContentAssignment_3_0(), "rule__Frame__ContentAssignment_3_0");
					put(grammarAccess.getTitleAccess().getNameAssignment_1(), "rule__Title__NameAssignment_1");
					put(grammarAccess.getWidthAccess().getValueAssignment_1(), "rule__Width__ValueAssignment_1");
					put(grammarAccess.getHeightAccess().getValueAssignment_1(), "rule__Height__ValueAssignment_1");
					put(grammarAccess.getContentAccess().getComponentsAssignment_2(), "rule__Content__ComponentsAssignment_2");
					put(grammarAccess.getLabelAccess().getValueAssignment_1(), "rule__Label__ValueAssignment_1");
					put(grammarAccess.getButtonAccess().getValueAssignment_1(), "rule__Button__ValueAssignment_1");
					put(grammarAccess.getButtonAccess().getDestAssignment_3(), "rule__Button__DestAssignment_3");
					put(grammarAccess.getFrameAccess().getUnorderedGroup(), "rule__Frame__UnorderedGroup");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.imta.dsl.evaluation.exe1.ui.contentassist.antlr.internal.InternalExe1Parser typedParser = (fr.imta.dsl.evaluation.exe1.ui.contentassist.antlr.internal.InternalExe1Parser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public Exe1GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(Exe1GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}

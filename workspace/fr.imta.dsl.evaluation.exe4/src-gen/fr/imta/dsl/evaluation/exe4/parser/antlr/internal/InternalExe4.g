/*
* generated by Xtext
*/
grammar InternalExe4;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.imta.dsl.evaluation.exe4.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.imta.dsl.evaluation.exe4.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.imta.dsl.evaluation.exe4.services.Exe4GrammarAccess;

}

@parser::members {

 	private Exe4GrammarAccess grammarAccess;
 	
    public InternalExe4Parser(TokenStream input, Exe4GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected Exe4GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getFramesFrameParserRuleCall_0()); 
	    }
		lv_frames_0_0=ruleFrame		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"frames",
        		lv_frames_0_0, 
        		"Frame");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleFrame
entryRuleFrame returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFrameRule()); }
	 iv_ruleFrame=ruleFrame 
	 { $current=$iv_ruleFrame.current; } 
	 EOF 
;

// Rule Frame
ruleFrame returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getFrameAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(	otherlv_1='frame' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFrameAccess().getFrameKeyword_0_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFrameAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFrameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFrameAccess().getLeftCurlyBracketKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFrameAccess().getTitleTitleParserRuleCall_0_3_0()); 
	    }
		lv_title_4_0=ruleTitle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFrameRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"Title");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getFrameAccess().getWidthWidthParserRuleCall_1_0()); 
	    }
		lv_width_5_0=ruleWidth		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFrameRule());
	        }
       		set(
       			$current, 
       			"width",
        		lv_width_5_0, 
        		"Width");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup(), 2);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getFrameAccess().getHeightHeightParserRuleCall_2_0()); 
	    }
		lv_height_6_0=ruleHeight		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFrameRule());
	        }
       		set(
       			$current, 
       			"height",
        		lv_height_6_0, 
        		"Height");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup(), 3);
	 				}
					({true}?=>((
(
		{ 
	        newCompositeNode(grammarAccess.getFrameAccess().getContentContentParserRuleCall_3_0_0()); 
	    }
		lv_content_7_0=ruleContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFrameRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_7_0, 
        		"Content");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFrameAccess().getRightCurlyBracketKeyword_3_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getFrameAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getFrameAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleTitle
entryRuleTitle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	 iv_ruleTitle=ruleTitle 
	 { $current=$iv_ruleTitle.current; } 
	 EOF 
;

// Rule Title
ruleTitle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='title:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTitleAccess().getTitleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTitleAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTitleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleWidth
entryRuleWidth returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWidthRule()); }
	 iv_ruleWidth=ruleWidth 
	 { $current=$iv_ruleWidth.current; } 
	 EOF 
;

// Rule Width
ruleWidth returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='width:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWidthAccess().getWidthKeyword_0());
    }
(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getWidthAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWidthRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleHeight
entryRuleHeight returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeightRule()); }
	 iv_ruleHeight=ruleHeight 
	 { $current=$iv_ruleHeight.current; } 
	 EOF 
;

// Rule Height
ruleHeight returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='height:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeightAccess().getHeightKeyword_0());
    }
(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getHeightAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeightRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleContent
entryRuleContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	 iv_ruleContent=ruleContent 
	 { $current=$iv_ruleContent.current; } 
	 EOF 
;

// Rule Content
ruleContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='content' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContentAccess().getContentKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContentAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentAccess().getComponentsComponentParserRuleCall_2_0()); 
	    }
		lv_components_2_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentRule());
	        }
       		add(
       			$current, 
       			"components",
        		lv_components_2_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getContentAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	 iv_ruleComponent=ruleComponent 
	 { $current=$iv_ruleComponent.current; } 
	 EOF 
;

// Rule Component
ruleComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getComponentAccess().getLabelParserRuleCall_0()); 
    }
    this_Label_0=ruleLabel
    { 
        $current = $this_Label_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getComponentAccess().getButtonParserRuleCall_1()); 
    }
    this_Button_1=ruleButton
    { 
        $current = $this_Button_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	 iv_ruleLabel=ruleLabel 
	 { $current=$iv_ruleLabel.current; } 
	 EOF 
;

// Rule Label
ruleLabel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='label:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLabelAccess().getLabelKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getLabelAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getButtonRule()); }
	 iv_ruleButton=ruleButton 
	 { $current=$iv_ruleButton.current; } 
	 EOF 
;

// Rule Button
ruleButton returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='button:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getButtonAccess().getButtonKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getButtonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getButtonAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getButtonAccess().getDestFrameCrossReference_3_0()); 
	}

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


